---
layout: ./base.njk
---

<div class="novel">
  <main class="container">
    <header class="novel-header">
      <h1>
        {{ title }}
      </h1>
      {{ description | md | safe }}

      {% include "templates/toc.njk" %}
    </header>

    <article class="article heti heti--ancient">
      {{ content | safe }}
    </article>
  </main>
  <span id="popup" style="display:none; position:absolute; background-color:white; border:1px solid black;"></span>
  <aside class="panel">
    <ul class="panel-list panel-list--gray">
      <li><input type="radio" class="J_radioGrid" value="" name="grid" id="grid-disable" checked><label for="grid-disable">ÁΩëÊ†ºÔºöÂÖ≥</label></li>
      <li><input type="radio" class="J_radioGrid" value="grid-24" name="grid" id="grid-24"><label for="grid-24">Â§ß</label></li>
      <li><input type="radio" class="J_radioGrid" value="grid-12" name="grid" id="grid-12"><label for="grid-12">Â∞è</label></li>
    </ul>
    <ul class="panel-list panel-list--gray panel-list--icon">
      <li><input type="radio" class="J_darkMode" value="auto" name="darkmode" id="darkmode-auto" checked><label for="darkmode-auto">üåó</label></li>
      <li><input type="radio" class="J_darkMode" value="light" name="darkmode" id="darkmode-light"><label for="darkmode-light">üåû</label></li>
      <li><input type="radio" class="J_darkMode" value="dark" name="darkmode" id="darkmode-dark"><label for="darkmode-dark">üåô</label></li>
    </ul>
  </aside>
  <script>
    const $$root = document.getElementsByTagName('html')[0]
    const $$main = document.getElementsByTagName('main')[0]
    const $$article = document.getElementsByTagName('article')[0]
    const $$aside = document.querySelector('aside')

    setTimeout(function(){
      $$aside.style.display = 'none'
    }, 3000)

    document.addEventListener('click', function(){
      $$aside.style.display = 'block'
      setTimeout(function(){
        $$aside.style.display = 'none'
      }, 3000)
    })

    function parseHeteronym(response) {
      let temp = ""
      for (const heteronym of response.heteronyms) {
        temp = temp +`${heteronym.bopomofo} ${heteronym.bopomofo2}\n
        `
        for (const definition of heteronym.definitions) {
          temp = temp + `  ${definition.type} ${definition.def}\n
          `
        }
      }
      return temp
    }

    document.addEventListener('mouseup', function(e) {
      const selection = window.getSelection().toString()
      if (selection) {
        const xhr = new XMLHttpRequest()
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4 && xhr.status == 200) {
            const response = JSON.parse(xhr.responseText)
            const popup = document.getElementById("popup")
            popup.innerHTML = parseHeteronym(response)
            popup.style.display = "block"
            popup.style.top = e.pageY + 10 + "px"
            popup.style.left = e.pageX + 10 + "px"
          }
        }
        xhr.open('GET', 'https://www.moedict.tw/uni/' + selection + '.json')
        xhr.send()
      } else {
        document.getElementById("popup").style.display = "none"
      }
    })


    function addEventListeners(nodeList, event, fn) {
      [].forEach.call(nodeList, function(elm) {
        elm.addEventListener(event, fn, false)
      }, false)
    }

    function restoreOption(itemName, className, elm) {
      const storedValue = localStorage.getItem(itemName)
      if (storedValue) {
        for (let element of document.getElementsByClassName(className)) {
          element.checked = (storedValue === element.value) ? true : false
        }
        elm.setAttribute(itemName, storedValue)
      }
    }

    restoreOption('data-darkmode', 'J_darkMode', $$root)
    restoreOption('data-bg-grid', 'J_radioGrid', $$main)

    addEventListeners(document.getElementsByClassName('J_darkMode'), 'change', function (e) {
      $$root.setAttribute('data-darkmode', e.target.value)
      localStorage.setItem('data-darkmode', e.target.value)
    })

    addEventListeners(document.getElementsByClassName('J_radioGrid'), 'change', function (e) {
      $$main.setAttribute('data-bg-grid', e.target.value)
      localStorage.setItem('data-bg-grid', e.target.value)
    })

    const heti = new Heti('.article')
    heti.autoSpacing()
  </script>
</div>